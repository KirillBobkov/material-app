{"version":3,"file":"static/js/97.e079a938.chunk.js","mappings":"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","sources":["components/Quote/Quote.tsx","components/SquareImagesCarousel/SquareImagesCarousel.tsx","consts/images.ts","pages/Home/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nimport * as api from '../../api';\r\n\r\nimport { IQuote, IQuoteResponse } from '../../interfaces/IQuoteResponse';\r\n\r\ntype StyledSpanType = {\r\n  isVisible: boolean;\r\n};\r\n\r\ntype StyledParagraphType = {\r\n  isVisible: boolean;\r\n};\r\n\r\nconst StyledSection  = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px;\r\n  background-color: gray;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  min-height: 250px;\r\n`;\r\n\r\nconst StyledParagraph  = styled.span<StyledParagraphType>`\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n  font-size: 16px;\r\n  color: white;\r\n  transition: opacity .5s;\r\n  margin: 0;\r\n  margin-bottom: 20px;\r\n  opacity: ${props => props.isVisible ? 1 : 0};\r\n`;\r\n\r\nconst StyledSpan  = styled.span<StyledSpanType>`\r\n  font-size: 12px;\r\n  color: white;\r\n  font-weight: 700;\r\n  transition: opacity .5s;\r\n  opacity: ${props => props.isVisible ? 1 : 0};\r\n`;\r\n\r\nconst getInitialState = (): IQuote =>  ({\r\n  author: '',\r\n  tag:   '',\r\n  text: '',\r\n});\r\n\r\nconst Quote = (): JSX.Element => {\r\n  const [quote, setQuote] = useState<IQuote>(getInitialState());\r\n\r\n  useEffect(() => {\r\n    const fetchQuote = async () =>  {\r\n      const res: AxiosResponse<IQuoteResponse>  = await api.quotes.getRandomQuote();\r\n      setQuote(res.data.quotes[0]);\r\n    };\r\n\r\n    fetchQuote();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledSection>\r\n      <StyledParagraph isVisible={!!quote.text}>{quote.text}</StyledParagraph>\r\n      <StyledSpan isVisible={!!quote.author}>{quote.author}</StyledSpan>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ImageCard } from '../../interfaces/ImageCard';\r\n\r\ntype CardProps = { card: ImageCard };\r\ninterface CarouselProps {\r\n  cards: ImageCard[];\r\n  cardSize: number;\r\n  gap: number;\r\n}\r\n\r\nconst Sqimс = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  box-sizing: content-box;\r\n  margin: 40px auto;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  max-width: 100%;\r\n  flex: 1 1 0px;\r\n  height: 100%;\r\n`;\r\n\r\nconst Row = styled.div<{ gap: number; }>`\r\n  display: flex;\r\n  aspect-ratio: 3 / 2;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 0 ${(props) => props.gap}px;\r\n  overflow: auto;\r\n  scrollbar-width: none;\r\n  scroll-behavior: smooth;\r\n  gap: ${(props) => props.gap}px;\r\n  grid-gap: ${(props) => props.gap}px;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div<CardProps>`\r\n  max-width: 90%;\r\n  flex: 0 0 auto;\r\n  aspect-ratio: 1 / 1;\r\n  background-image: url('${(props) => props.card.background}');\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  width: 1px;\r\n`;\r\n\r\nconst ArrowLeft = styled.div`\r\n  position: absolute;\r\n  content: \"\";\r\n  width: 30px;\r\n  height: 100%;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  left: 0;\r\n  transition: opacity .5s;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: \"\";\r\n    top: 50%;\r\n    width: 15px;\r\n    height: 15px;\r\n    border-right: 3px solid #000000;\r\n    border-bottom: 3px solid #000000;\r\n    left: 20px;\r\n    transform: rotate(135deg);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ArrowRight = styled.div`\r\n  position: absolute;\r\n  content: \"\";\r\n  width: 5em;\r\n  height: 100%;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  right: 0;\r\n  transition: opacity .5s;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n\r\n   &::before {\r\n    position: absolute;\r\n    content: \"\";\r\n    top: 50%;\r\n    width: 15px;\r\n    height: 15px;\r\n    border-right: 3px solid  #000000;\r\n    border-bottom: 3px solid  #000000;\r\n    right: 20px;\r\n    transform: rotate(-45deg);\r\n    cursor: pointer;\r\n   }\r\n`;\r\n\r\nexport default function SquareImagesCarousel({ cards, cardSize, gap }: CarouselProps) {\r\n  const carouselRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const makeScroll = (direction: number ): void => {\r\n    if (carouselRef.current) {\r\n      const { scrollLeft, offsetWidth,  scrollWidth } = carouselRef.current;\r\n      const cardWidth = cardSize + gap;\r\n      const visibleCards = Math.abs(Math.floor(offsetWidth / cardWidth));\r\n      const visibleCardsWidth = cardWidth * visibleCards;\r\n      const scrollStart = scrollLeft === 0;\r\n      const scrollEnd = offsetWidth + scrollLeft === scrollWidth;\r\n\r\n      if (scrollStart || scrollEnd) {\r\n        carouselRef.current.scrollLeft += direction * (cardWidth - ((offsetWidth - visibleCardsWidth - gap) * 0.5));\r\n        return;\r\n      }\r\n  \r\n      carouselRef.current.scrollLeft += direction * visibleCardsWidth;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Sqimс style={{ height: `${cardSize}px` }} >\r\n      <RowContainer>\r\n        <Row ref={carouselRef} gap={gap}>\r\n          {cards.map((card: any ): JSX.Element => <Card key={card.id} card={card} />)}\r\n        </Row>\r\n      </RowContainer>\r\n      <Actions>\r\n        <ArrowLeft onClick={(): void => makeScroll(-1)} />\r\n        <ArrowRight onClick={(): void => makeScroll(1)} />\r\n      </Actions>\r\n    </Sqimс>\r\n  );\r\n}\r\n","import { ImageCard } from '../interfaces/ImageCard';\r\n\r\nexport const smallImages: ImageCard[] = [\r\n  { id: '21fds', background: 'https://picsum.photos/id/233/200/200' },\r\n  { id: '22fdg', background: 'https://picsum.photos/id/232/200/200' },\r\n  { id: '33fdg', background: 'https://picsum.photos/id/234/200/200' },\r\n  { id: '24fdgbv', background: 'https://picsum.photos/id/235/200/200' },\r\n  { id: '2yt5', background: 'https://picsum.photos/id/237/200/200' },\r\n  { id: '2vcxb6', background: 'https://picsum.photos/id/238/200/200' },\r\n  { id: '27nb', background: 'https://picsum.photos/id/239/200/200' },\r\n  { id: '2n8', background: 'https://picsum.photos/id/240/200/200' },\r\n  { id: 'yttyu29', background: 'https://picsum.photos/id/241/200/200' },\r\n  { id: '2tyur', background: 'https://picsum.photos/id/242/200/200' },\r\n  { id: '2ytu1', background: 'https://picsum.photos/id/243/200/200' },\r\n  { id: '22ytu3', background: 'https://picsum.photos/id/244/200/200' },\r\n  { id: '2tu234', background: 'https://picsum.photos/id/233/200/200' },\r\n  { id: '2324', background: 'https://picsum.photos/id/267/200/200' },\r\n  { id: '27tyu68', background: 'https://picsum.photos/id/247/200/200' },\r\n  { id: '29tu0', background: 'https://picsum.photos/id/248/200/200' },\r\n  { id: 'ty2et', background: 'https://picsum.photos/id/249/200/200' },\r\n  { id: '2769', background: 'https://picsum.photos/id/250/200/200' },\r\n  { id: '2fjhg', background: 'https://picsum.photos/id/251/200/200' },\r\n];\r\n\r\nexport const bidImages: ImageCard[] = [\r\n  { id: 'fhgdh1', background: 'https://picsum.photos/id/232/400/400' },\r\n  { id: 'hgitds1', background: 'https://picsum.photos/id/233/400/400' },\r\n  { id: '1rtykj', background: 'https://picsum.photos/id/234/400/400' },\r\n  { id: '1oiuyj', background: 'https://picsum.photos/id/235/400/400' },\r\n  { id: 'cvbxfg1', background: 'https://picsum.photos/id/237/400/400' },\r\n  { id: '1hgf', background: 'https://picsum.photos/id/238/400/400' },\r\n  { id: '1fghfm', background: 'https://picsum.photos/id/239/400/400' },\r\n  { id: '56751', background: 'https://picsum.photos/id/240/400/400' },\r\n  { id: 'fghr51', background: 'https://picsum.photos/id/241/400/400' },\r\n  { id: '1hgcx', background: 'https://picsum.photos/id/242/400/400' },\r\n  { id: '1edrfgb', background: 'https://picsum.photos/id/243/400/400' },\r\n  { id: 'fhdfg1', background: 'https://picsum.photos/id/244/400/400' },\r\n  { id: '1jhbvc', background: 'https://picsum.photos/id/267/400/400' },\r\n  { id: '1sdyjhk', background: 'https://picsum.photos/id/279/400/400' },\r\n  { id: '1erst', background: 'https://picsum.photos/id/247/400/400' },\r\n  { id: 'fghdsf1', background: 'https://picsum.photos/id/248/400/400' },\r\n  { id: '567hjg1', background: 'https://picsum.photos/id/249/400/400' },\r\n  { id: '5671', background: 'https://picsum.photos/id/250/400/400' },\r\n  { id: '145ery', background: 'https://picsum.photos/id/251/400/400' },\r\n];","import React, { useEffect } from 'react';\r\n\r\nimport Quote from '../../components/Quote';\r\nimport SquareImagesCarousel from '../../components/SquareImagesCarousel';\r\n\r\nimport { bidImages, smallImages } from '../../consts/images';\r\n\r\nconst Home = (): JSX.Element => {\r\n  useEffect((): void => { \r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return <>\r\n    <Quote />\r\n    <SquareImagesCarousel cardSize={400} gap={40} cards={bidImages} />\r\n    <Quote />\r\n    <SquareImagesCarousel cardSize={200} gap={20} cards={smallImages} />\r\n    <Quote />\r\n  </>;\r\n};\r\n\r\nexport default Home;\r\n"],"names":["StyledSection","styled","StyledParagraph","props","isVisible","StyledSpan","useState","author","tag","text","quote","setQuote","useEffect","fetchQuote","api","res","data","quotes","Sqimс","RowContainer","Row","gap","Card","card","background","Actions","ArrowLeft","ArrowRight","SquareImagesCarousel","cards","cardSize","carouselRef","useRef","makeScroll","direction","current","scrollLeft","offsetWidth","scrollWidth","cardWidth","visibleCardsWidth","Math","abs","floor","style","height","ref","map","id","onClick","smallImages","bidImages","window","scrollTo","Quote"],"sourceRoot":""}